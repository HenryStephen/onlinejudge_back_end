<?xml version="1.0" encoding="UTF-8"?>
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
    <generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
    <item>
        <problem_title><![CDATA[送分题-A+B Problem]]></problem_title>
        <problem_time_limit unit="ms"><![CDATA[1000]]></problem_time_limit>
        <problem_memory_limit unit="mb"><![CDATA[256]]></problem_memory_limit>
        <problem_description><![CDATA[<p>Calculate a+b</p>]]></problem_description>
        <problem_input_formation><![CDATA[<p>Two integer a,b (0&lt;=a,b&lt;=10)</p>]]></problem_input_formation>
        <problem_output_formation><![CDATA[<p>Output a+b</p>]]></problem_output_formation>
<!--        输入输出样例-->
        <sample_input><![CDATA[1 2]]></sample_input>
        <sample_output><![CDATA[3]]></sample_output>
<!--        测试用例-->
        <test_input><![CDATA[500 17]]></test_input>
        <test_output><![CDATA[517]]></test_output>
        <test_input><![CDATA[2 3]]></test_input>
        <test_output><![CDATA[5]]></test_output>
        <problem_reminder><![CDATA[<p>Q: Where are the input and the output? A: Your program shall always <font color="#ff0000">read input from stdin (Standard Input) and write output to stdout (Standard Output)</font>. For example, you can use 'scanf' in C or 'cin' in C++ to read from stdin, and use 'printf' in C or 'cout' in C++ to write to stdout. You <font color="#ff0000">shall not output any extra data</font> to standard output other than that required by the problem, otherwise you will get a &quot;Wrong Answer&quot;. User programs are not allowed to open and read from/write to files. You will get a &quot;Runtime Error&quot; or a &quot;Wrong Answer&quot; if you try to do so. Here is a sample solution for problem 1000 using C++/G++:</p>
<pre>
#include &lt;iostream&gt;
using namespace std;
int  main()
{
    int a,b;
    cin &gt;&gt; a &gt;&gt; b;
    cout &lt;&lt; a+b &lt;&lt; endl;
    return 0;
}</pre>
<p>It's important that the return type of main() must be int when you use G++/GCC,or you may get compile error. Here is a sample solution for problem 1000 using C/GCC:</p>
<pre>
#include &lt;stdio.h&gt;

int main()
{
    int a,b;
    scanf(&quot;%d %d&quot;,&amp;a, &amp;b);
    printf(&quot;%d\n&quot;,a+b);
    return 0;
}</pre>
<p>Here is a sample solution for problem 1000 using PASCAL:</p>
<pre>
program p1000(Input,Output);
var
  a,b:Integer;
begin
   Readln(a,b);
   Writeln(a+b);
end.</pre>
<p>Here is a sample solution for problem 1000 using JAVA: Now java compiler is jdk 1.5, next is program for 1000</p>
<pre>
import java.io.*;
import java.util.*;
public class Main
{
            public static void main(String args[]) throws Exception
            {
                    Scanner cin=new Scanner(System.in);
                    int a=cin.nextInt();
                    int b=cin.nextInt();
                    System.out.println(a+b);
            }
}</pre>
<p>Old program for jdk 1.4</p>
<pre>
import java.io.*;
import java.util.*;

public class Main
{
    public static void main (String args[]) throws Exception
    {
        BufferedReader stdin =
            new BufferedReader(
                new InputStreamReader(System.in));

        String line = stdin.readLine();
        StringTokenizer st = new StringTokenizer(line);
        int a = Integer.parseInt(st.nextToken());
        int b = Integer.parseInt(st.nextToken());
        System.out.println(a+b);
    }
}</pre>]]></problem_reminder>
        <problem_author><![CDATA[系统原理，熟悉OJ]]></problem_author>
        <solution language="C"><![CDATA[#include <stdio.h>
int main()
{
	int a,b;
	while(scanf("%d%d",&a,&b)!=EOF)
	{
		printf("%d\n",a+b);
	}
	return 0;
}]]></solution>
        <solution language="C++"><![CDATA[#include <iostream>
#include <cstdio>
using namespace std;
int main()
{
#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
#endif
	int a,b;
	while(cin >>a >>b)
	{
		cout <<a+b <<endl;
	}
	return 0;
}]]></solution>
        <solution language="Pascal"><![CDATA[program abprob;
var
  a,b:longint;
begin
   readln(a,b);
   writeln(a+b);
end.]]></solution>
        <solution language="Java"><![CDATA[import java.util.*;
public class Main
{
	public static void main(String args[])
	{
		Scanner cin = new Scanner(System.in);
		int a,b;

		while(cin.hasNextInt())
		{
			a = cin.nextInt();
			b = cin.nextInt();
			System.out.println(a+b);
		}
	}
}]]></solution>
        <solution language="Bash"><![CDATA[read a b
let c=$a+$b
echo $c]]></solution>
        <solution language="Python"><![CDATA[#!/usr/bin/python2
a=raw_input()
b=a.split(" ")
print eval(b[0]+"+"+b[1])
]]></solution>
        <solution language="C#"><![CDATA[using System;
class Program {
    public static void Main() {
        string line;
        string []p;
        int a,b;
        while((line=Console.ReadLine())!=null){
            p=line.Split(' ');
            a=int.Parse(p[0]);b=int.Parse(p[1]);
            Console.WriteLine(a+b);
        }
    }
}]]></solution>
    </item>
    <!--	<item>-->
    <!--		<title><![CDATA[A Bug]]></title>-->
    <!--		<time_limit unit="ms"><![CDATA[1000]]></time_limit>-->
    <!--		<memory_limit unit="mb"><![CDATA[128]]></memory_limit>-->
    <!--		<description>-->
    <!--			<![CDATA[<p><b>Background</b> <br />-->
    <!--			Professor Hopper is researching the sexual behavior of a rare  species of bugs. He assumes that they feature two different genders and  that they only interact with bugs of the opposite gender. In his  experiment, individual bugs and their interactions were easy to  identify, because numbers were printed on their backs. <br />-->
    <!--			<b>Problem</b> <br />-->
    <!--			Given a list of bug interactions, decide whether the experiment  supports his assumption of two genders with no homosexual bugs or if it  contains some bug interactions that falsify it.</p>-->
    <!--			<p>&nbsp;</p>]]>-->
    <!--		</description>-->
    <!--		<input><![CDATA[<p>The first line of the input contains the number of scenarios. Each  scenario starts with one line giving the number of bugs (at least one,  and up to 2000) and the number of interactions (up to 1000000) separated  by a single space. In the following lines, each interaction is given in  the form of two distinct bug numbers separated by a single space. Bugs  are numbered consecutively starting from one.</p>]]></input>-->
    <!--		<output><![CDATA[<p>The output for every scenario is a line containing &quot;Scenario #i:&quot;, where  i is the number of the scenario starting at 1, followed by one line  saying either &quot;No suspicious bugs found!&quot; if the experiment is  consistent with his assumption about the bugs' sexual behavior, or  &quot;Suspicious bugs found!&quot; if Professor Hopper's assumption is definitely  wrong.</p>]]></output>-->
    <!--		<sample_input>-->
    <!--			<![CDATA[-->
    <!--			2-->
    <!--			3 3-->
    <!--			1 2-->
    <!--			2 3-->
    <!--			1 3-->
    <!--			4 2-->
    <!--			1 2-->
    <!--			3 4-->
    <!--			]]>-->
    <!--		</sample_input>-->
    <!--		<sample_output>-->
    <!--			<![CDATA[-->
    <!--			Scenario #1:-->
    <!--			Suspicious bugs found!-->
    <!--			Scenario #2:-->
    <!--			No suspicious bugs found!-->
    <!--			]]>-->
    <!--		</sample_output>-->
    <!--		<hint>-->
    <!--			<![CDATA[-->
    <!--			#include<iostream>-->
    <!--			#include<cstring>-->
    <!--			#include<vector>-->
    <!--			#include<stdio.h>-->
    <!--			#define NOT 0-->
    <!--			#define MALE 1-->
    <!--			#define FEMALE 2-->
    <!--			using namespace std;-->
    <!--			bool chk;-->
    <!--			vector<vector<int> > list; //간선들-->
    <!--			int visited[2000];-->
    <!--			bool vis[2000];-->
    <!--			void dfs(int s,int state)-->

    <!--			{-->
    <!--				if(visited[s] == NOT)-->
    <!--					visited[s] = state;-->
    <!--				else-->
    <!--					return;-->
    <!--				for(unsigned int i = 0; i < list[s].size();i++)-->
    <!--				{-->
    <!--					if(visited[list[s][i]] == NOT)-->
    <!--					{-->
    <!--						if(state == FEMALE)-->
    <!--							dfs(list[s][i],MALE);           //다음 정점은 수컷으로-->
    <!--						else if(state == MALE)-->
    <!--							dfs(list[s][i],FEMALE);-->
    <!--					}-->
    <!--				}-->
    <!--			}-->

    <!--			void dfs_process(int s)-->

    <!--			{-->
    <!--				if(!vis[s]) vis[s] = true;-->
    <!--				else if(chk) return;-->
    <!--				else return;-->
    <!--				for(unsigned int i = 0 ; i < list[s].size();i++)-->
    <!--				{-->
    <!--					if(visited[s] == visited[list[s][i]])-->
    <!--						chk = true;     //성이 모호해 지는 관계-->
    <!--					if(!vis[list[s][i]])-->
    <!--						dfs_process(list[s][i]);-->
    <!--				}-->
    <!--			}-->

    <!--			int main()-->

    <!--			{-->
    <!--				int T,n,m;-->
    <!--				scanf("%d",&T);-->
    <!--				for(int aa = 0; aa < T;aa++)-->
    <!--				{-->
    <!--					scanf("%d %d",&n,&m);-->
    <!--					list.resize(n,vector<int>(0));-->
    <!--					memset(visited,NOT,sizeof(visited));-->
    <!--					memset(vis,false,sizeof(vis));-->
    <!--					chk = false;-->
    <!--					for(int i = 0; i < n;i++)-->
    <!--						list[i].clear();-->
    <!--					for(int i = 0; i < m ; i++)-->
    <!--					{-->
    <!--						int p,q;-->
    <!--						scanf("%d %d",&p,&q);-->
    <!--						list[p-1].push_back(q-1); //리스트 구현-->
    <!--						list[q-1].push_back(p-1);-->
    <!--					}-->
    <!--					for(int i = 0; i < n;i++)-->
    <!--					{-->
    <!--						if(visited[i] == NOT)-->

    <!--							dfs(i,FEMALE);-->
    <!--						dfs_process(i);-->
    <!--					}-->
    <!--					printf("Scenario #%d:\n",aa+1);-->
    <!--					if(chk)     //chk가 참이면 성이 모호해 지는 관계를 뜻함-->
    <!--						printf("Suspicious bugs found!\n");-->
    <!--					else-->
    <!--						printf("No suspicious bugs found!\n");-->
    <!--					printf("\n");-->
    <!--				}-->
    <!--				return 0;-->

    <!--			}-->
    <!--			]]>-->
    <!--		</hint>-->
    <!--		<source><![CDATA[]]></source>-->
    <!--		<difficulty>High</difficulty>-->
    <!--		<spj><![CDATA[]]></spj>-->
    <!--	</item>-->
</fps>
